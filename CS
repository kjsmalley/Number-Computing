import math
from fractions import Fraction
import turtle

def prime_factors(n):
    i = 2
    factors = []
    while i * i <= n:
        if n % i:
            i += 1
        else:
            n //= i
            factors.append(i)
    if n > 1:
        factors.append(n)
    return factors

def is_prime(n):
    for a in range(2, int(math.sqrt(n)) + 1):
        if n % a == 0:
            return False
    else:
        return True
    
def collatz(n):
    if n >= 1:
        if n % 4 == 0:
            return collatz(n // 2)
        elif n % 2 == 0:
            return n // 2
        else:
            return collatz(3 * n + 1)

def get_twin_primes(max):
    a = []
    i = 3
    while i <= max:
        b0 = is_prime(i - 2)
        b1 = is_prime(i)
        b2 = is_prime(i + 2)
        if (b1 and b0) or (b1 and b2):
            a += [i]
        i += 2 
    return a  
        
def get_primes(max, x = 0):
    if x == 1:
        return get_twin_primes(max)
    a = []
    for i in range(1, max):
        if is_prime(i):
            a += [i]
    return a
    

def next_prime(p):
    i = p + 1
    while True:
        if is_prime(i):
            return i
        i += 1
    
